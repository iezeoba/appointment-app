{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","model","make","owner","apptDate","apptTime","apptNotes","handleChange","bind","handleAdd","e","preventDefault","tempAppt","this","props","addAppointment","setState","toggleForm","target","value","name","className","formDisplay","onClick","onSubmit","id","noValidate","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchAppts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","key","apptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","App","tempAppts","allAppointments","findIndex","queryText","lastApptId","query","order","dir","appt","unshift","without","fetch","then","response","json","result","appts","filteredAppts","sort","a","b","toLowerCase","filter","eachItem","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.713b44d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nclass AddAppointments extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            model: '',\r\n            make: '',\r\n            owner: '',\r\n            apptDate: '',\r\n            apptTime: '',\r\n            apptNotes: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n\r\n    handleAdd(e) {\r\n        e.preventDefault();\r\n        let tempAppt = {\r\n            model: this.state.model,\r\n            make: this.state.make,\r\n            owner: this.state.owner,\r\n            apptDate: this.state.apptDate + ' ' + this.state.apptTime,\r\n            apptNotes: this.state.apptNotes\r\n        };\r\n        this.props.addAppointment(tempAppt);\r\n\r\n        this.setState({\r\n            model: '',\r\n            make: '',\r\n            owner: '',\r\n            apptDate: '',\r\n            apptTime: '',\r\n            apptNotes: ''\r\n        });\r\n        this.props.toggleForm();\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                className={\r\n                    'card textcenter mt-3 ' +\r\n                    (this.props.formDisplay ? '' : 'add-appointment')\r\n                }\r\n            >\r\n                <div className=\"appt-addheading card-header bg-primary text-white\"\r\n                    onClick={this.props.toggleForm}>\r\n                    <FaPlus /> Add Appointment\r\n                    </div>\r\n                <div className=\"card-body\" onSubmit={this.handleAdd}>\r\n                    <form id=\"apptForm\" noValidate>\r\n                        <div className=\"form-group form-row\">\r\n                            <label\r\n                                className=\"col-md-2 col-form-label text-md-right\"\r\n                                htmlFor=\"model\"\r\n                                readOnly\r\n                            >\r\n                                Vehicle Model\r\n              </label>\r\n                            <div className=\"col-md-10\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"model\"\r\n                                    placeholder=\"Model and Year\"\r\n                                    value={this.state.model}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group form-row\">\r\n                            <label\r\n                                className=\"col-md-2 col-form-label text-md-right\"\r\n                                htmlFor=\"make\"\r\n                                readOnly\r\n                            >\r\n                                Vehicle Make\r\n              </label>\r\n                            <div className=\"col-md-10\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"make\"\r\n                                    placeholder=\"Make\"\r\n                                    value={this.state.make}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group form-row\">\r\n                            <label\r\n                                className=\"col-md-2 col-form-label text-md-right\"\r\n                                htmlFor=\"owner\"\r\n                            >\r\n                                Vehicle Owner\r\n              </label>\r\n                            <div className=\"col-md-10\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"owner\"\r\n                                    placeholder=\"Owner's Name\"\r\n                                    value={this.state.owner}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group form-row\">\r\n                            <label\r\n                                className=\"col-md-2 col-form-label text-md-right\"\r\n                                htmlFor=\"apptDate\"\r\n                            >\r\n                                Date\r\n              </label>\r\n                            <div className=\"col-md-4\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"apptDate\"\r\n                                    id=\"apptDate\"\r\n                                    value={this.state.apptDate}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <label\r\n                                className=\"col-md-2 col-form-label text-md-right\"\r\n                                htmlFor=\"apptTime\"\r\n                            >\r\n                                Time\r\n              </label>\r\n                            <div className=\"col-md-4\">\r\n                                <input\r\n                                    type=\"time\"\r\n                                    className=\"form-control\"\r\n                                    name=\"apptTime\"\r\n                                    id=\"apptTime\"\r\n                                    value={this.state.apptTime}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group form-row\">\r\n                            <label className=\"col-md-2 text-md-right\" htmlFor=\"apptNotes\">\r\n                                Appt. Notes\r\n              </label>\r\n                            <div className=\"col-md-10\">\r\n                                <textarea\r\n                                    className=\"form-control\"\r\n                                    rows=\"4\"\r\n                                    cols=\"50\"\r\n                                    name=\"apptNotes\"\r\n                                    id=\"apptNotes\"\r\n                                    placeholder=\"Appointment Notes\"\r\n                                    value={this.state.apptNotes}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group form-row mb-0\">\r\n                            <div className=\"offset-md-2 col-md-10\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary d-block ml-auto\"\r\n                                >\r\n                                    Add Appointment\r\n                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddAppointments;","import React, { Component } from 'react';\r\n\r\nclass SearchAppointments extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"search-appointments row justify-content-center my-4\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            id=\"SearchAppts\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-label=\"Search Appointments\"\r\n                            onChange={e => this.props.searchAppts(e.target.value)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary dropdown-toggle\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                Sort by: <span className=\"caret\" />\r\n                            </button>\r\n\r\n                            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                                <button\r\n                                    className={\r\n                                        'sort-by dropdown-item ' +\r\n                                        (this.props.orderBy === 'model' ? 'active' : '')\r\n                                    }\r\n                                    onClick={e =>\r\n                                        this.props.changeOrder('model', this.props.orderDir)\r\n                                    }\r\n                                    href=\"#\"\r\n                                >\r\n                                    Vehicle Model\r\n                                </button>\r\n\r\n                                <button\r\n                                    className={\r\n                                        'sort-by dropdown-item ' +\r\n                                        (this.props.orderBy === 'make' ? 'active' : '')\r\n                                    }\r\n                                    onClick={e =>\r\n                                        this.props.changeOrder('make', this.props.orderDir)\r\n                                    }\r\n                                    href=\"#\"\r\n                                >\r\n                                    Vehicle Make\r\n                                </button>\r\n\r\n                                <button\r\n                                    className={\r\n                                        'sort-by dropdown-item ' +\r\n                                        (this.props.orderBy === 'owner' ? 'active' : '')\r\n                                    }\r\n                                    onClick={e =>\r\n                                        this.props.changeOrder('owner', this.props.orderDir)\r\n                                    }\r\n                                    href=\"#\"\r\n                                >\r\n                                    Owner\r\n                                </button>\r\n\r\n                                <button\r\n                                    className={\r\n                                        'sort-by dropdown-item ' +\r\n                                        (this.props.orderBy === 'apptDate' ? 'active' : '')\r\n                                    }\r\n                                    onClick={e =>\r\n                                        this.props.changeOrder('apptDate', this.props.orderDir)\r\n                                    }\r\n                                    href=\"#\"\r\n                                >\r\n                                    Date\r\n                                </button>\r\n\r\n                                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                                <button\r\n                                    className={\r\n                                        'sort-by dropdown-item ' +\r\n                                        (this.props.orderDir === 'asc' ? 'active' : '')\r\n                                    }\r\n                                    onClick={e =>\r\n                                        this.props.changeOrder(this.props.orderBy, 'asc')\r\n                                    }\r\n                                    href=\"#\"\r\n                                >\r\n                                    Asc\r\n                                </button>\r\n                                <button\r\n                                    className={\r\n                                        'sort-by dropdown-item ' +\r\n                                        (this.props.orderDir === 'desc' ? 'active' : '')\r\n                                    }\r\n                                    onClick={e =>\r\n                                        this.props.changeOrder(this.props.orderBy, 'desc')\r\n                                    }\r\n                                    href=\"#\"\r\n                                >\r\n                                    Desc\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchAppointments;","import React, { Component } from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport Moment from 'react-moment';\r\n\r\nclass ListAppointments extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"appointment-list item-list mb-3\">\r\n                {this.props.appointments.map(item => (\r\n                    <div className=\"model-item col media py-3\" key={item.apptId}>\r\n                        <div className=\"mr-3\">\r\n                            <button className=\"model-delete btn btn-sm btn-danger\"\r\n                                onClick={() => this.props.deleteAppointment(item)}>\r\n                                <FaTimes />\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"model-info media-body\">\r\n                            <div className=\"model-head d-flex\">\r\n                                <span className=\"model-name\" contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onBlur={e =>\r\n                                        this.props.updateInfo(\r\n                                            'model',\r\n                                            e.target.innerText,\r\n                                            item.apptId\r\n                                        )\r\n                                    }>\r\n                                    {item.model}\r\n                                </span>\r\n                                <span className=\"appt-date ml-auto\">\r\n                                    <Moment\r\n                                        date={item.apptDate}\r\n                                        parse=\"YYYY-MM-DD hh:mm\"\r\n                                        format=\"YYYY-MMM-D h:mma\"\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"make\">\r\n                                <span className=\"label-item\">Make: </span>\r\n                                <span\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onBlur={e =>\r\n                                        this.props.updateInfo(\r\n                                            'make',\r\n                                            e.target.innerText,\r\n                                            item.apptId\r\n                                        )\r\n                                    }>\r\n                                    {item.make}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"owner\">\r\n                                <span className=\"label-item\">Owner: </span>\r\n                                <span\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onBlur={e =>\r\n                                        this.props.updateInfo(\r\n                                            'owner',\r\n                                            e.target.innerText,\r\n                                            item.apptId\r\n                                        )\r\n                                    }>\r\n                                    {item.owner}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"appt-notes\"\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onBlur={e =>\r\n                                    this.props.updateInfo(\r\n                                        'apptNotes',\r\n                                        e.target.innerText,\r\n                                        item.apptId\r\n                                    )\r\n                                }>\r\n                                {item.apptNotes}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments';\nimport SearchAppointments from './SearchAppointments';\nimport ListAppointments from './ListAppointments';\nimport { findIndex, without } from 'lodash';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      allAppointments: [],\n      formDisplay: false,\n      orderBy: 'model',\n      orderDir: 'asc',\n      queryText: '',\n      lastApptId: 1\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchAppts = this.searchAppts.bind(this);\n    // this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    })\n  }\n\n  searchAppts(query) {\n    this.setState({ queryText: query });\n  }\n\n  changeOrder(order, dir) {\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    });\n  }\n\n  updateInfo = (name, value, id) => {\n    let tempAppts = this.state.allAppointments;\n    let apptIndex = findIndex(this.state.allAppointments, {\n      apptId: id\n    });\n    tempAppts[apptIndex][name] = value;\n    this.setState({\n      allAppointments: tempAppts\n    });\n    // console.log(name);\n    // console.log(value);\n    // console.log(id);\n    // console.log(apptIndex);\n  }\n\n  addAppointment(appt) {\n    let tempAppts = this.state.allAppointments;\n    appt.apptId = this.state.lastApptId;\n    tempAppts.unshift(appt);\n\n    this.setState({\n      allAppointments: tempAppts,\n      lastApptId: this.state.lastApptId + 1\n    })\n  }\n\n  deleteAppointment(appt) {\n    let tempAppts = this.state.allAppointments;\n    tempAppts = without(tempAppts, appt);\n\n    this.setState({\n      allAppointments: tempAppts\n    });\n  }\n\n  componentDidMount() {\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(result => {\n        const appts = result.map(item => {\n          item.apptId = this.state.lastApptId;\n          this.setState({ lastApptId: this.state.lastApptId + 1 });\n          return item;\n        });\n        this.setState({\n          allAppointments: appts\n        });\n      });\n  }\n  render() {\n    let order;\n    let filteredAppts = this.state.allAppointments;\n    if (this.state.orderDir === 'asc') {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredAppts = filteredAppts.sort((a, b) => {\n      if (\n        a[this.state.orderBy].toLowerCase() <\n        b[this.state.orderBy].toLowerCase()\n      ) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    })\n      .filter(eachItem => {\n        return (\n          eachItem['model']\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase()) ||\n          eachItem['make']\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase()) ||\n          eachItem['owner']\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase()) ||\n          eachItem['apptNotes']\n            .toLowerCase()\n            .includes(this.state.queryText.toLowerCase())\n        );\n      });\n\n    return (\n      <main className=\"page bg-white\" id=\"modelratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments formDisplay={this.state.formDisplay}\n                  toggleForm={this.toggleForm}\n                  addAppointment={this.addAppointment} />\n                <SearchAppointments\n                  orderBy={this.state.orderBy}\n                  orderDir={this.state.orderDir}\n                  changeOrder={this.changeOrder}\n                  searchAppts={this.searchAppts} />\n                <ListAppointments\n                  appointments={filteredAppts}\n                  deleteAppointment={this.deleteAppointment}\n                  updateInfo={this.updateInfo} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}